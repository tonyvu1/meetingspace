<h1>Schedule a Lesson</h1>

<div class="calendar-wrapper">
  <div class="date-picker">
    <div class="selected-date"></div>

    <div class="dates">
      <div class="month">
        <div class="arrows prev-mth">&lt;</div>
        <div class="mth"></div>
        <div class="arrows next-mth">&gt;</div>
      </div>

      <div class="days"></div>
    </div>
  </div>
</div>

<script>
  const date_picker_element = document.querySelector(".date-picker");
  const selected_date_element = document.querySelector(
    ".date-picker .selected-date"
  );
  const dates_element = document.querySelector(".date-picker .dates");
  const mth_element = document.querySelector(".date-picker .dates .month .mth");
  const next_mth_element = document.querySelector(
    ".date-picker .dates .month .next-mth"
  );
  const prev_mth_element = document.querySelector(
    ".date-picker .dates .month .prev-mth"
  );
  const days_element = document.querySelector(".date-picker .dates .days");

  const months = [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December"
  ];

  let date = new Date();
  let day = date.getDate();
  let month = date.getMonth();
  let year = date.getFullYear();

  let selectedDate = date;
  let selectedDay = day;
  let selectedMonth = month;
  let selectedYear = year;

  mth_element.textContent = months[month] + " " + year;

  selected_date_element.textContent = formatDate(date);
  selected_date_element.dataset.value = selectedDate;

  populateDates();

  // EVENT LISTENERS
  date_picker_element.addEventListener("click", toggleDatePicker);
  next_mth_element.addEventListener("click", goToNextMonth);
  prev_mth_element.addEventListener("click", goToPrevMonth);

  // FUNCTIONS
  function toggleDatePicker(e) {
    if (!checkEventPathForClass(e.path, "dates")) {
      dates_element.classList.toggle("active");
    }
  }

  function goToNextMonth(e) {
    month++;
    if (month > 11) {
      month = 0;
      year++;
    }
    mth_element.textContent = months[month] + " " + year;
    populateDates();
  }

  function goToPrevMonth(e) {
    month--;
    if (month < 0) {
      month = 11;
      year--;
    }
    mth_element.textContent = months[month] + " " + year;
    populateDates();
  }

  function populateDates(e) {
    days_element.innerHTML = "";
    let amount_days = 31;

    if (month == 1) {
      amount_days = 28;
    }

    for (let i = 0; i < amount_days; i++) {
      const day_element = document.createElement("div");
      day_element.classList.add("day");
      day_element.textContent = i + 1;

      if (
        selectedDay == i + 1 &&
        selectedYear == year &&
        selectedMonth == month
      ) {
        day_element.classList.add("selected");
      }

      day_element.addEventListener("click", function() {
        selectedDate = new Date(year + "-" + (month + 1) + "-" + (i + 1));
        selectedDay = i + 1;
        selectedMonth = month;
        selectedYear = year;

        selected_date_element.textContent = formatDate(selectedDate);
        selected_date_element.dataset.value = selectedDate;

        populateDates();
      });

      days_element.appendChild(day_element);
    }
  }

  // HELPER FUNCTIONS
  function checkEventPathForClass(path, selector) {
    for (let i = 0; i < path.length; i++) {
      if (path[i].classList && path[i].classList.contains(selector)) {
        return true;
      }
    }

    return false;
  }
  function formatDate(d) {
    let day = d.getDate();
    if (day < 10) {
      day = "0" + day;
    }

    let month = d.getMonth() + 1;
    if (month < 10) {
      month = "0" + month;
    }

    let year = d.getFullYear();

    return day + " / " + month + " / " + year;
  }
</script>

<style>
  .calendar-wrapper {
    background-color: #ffce00;
    font-family: "Saira", Arial, Helvetica, sans-serif;
    height: fit-content;
  }

  h1 {
    margin: 30px 0px;
    color: #313131;
    font-size: 42px;
    font-weight: 900;
    text-align: center;
  }

  h1 span {
    font-weight: 300;
  }

  .date-picker {
    position: relative;
    width: 100%;
    max-width: 320px;
    height: 60px;
    background-color: #fff;
    margin: 30px auto;
    box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.2);

    cursor: pointer;
    user-select: none;
  }

  .date-picker:hover {
    background-color: #f3f3f3;
  }

  .date-picker .selected-date {
    width: 100%;
    height: 100%;

    display: flex;
    justify-content: center;
    align-items: center;

    color: #313131;
    font-size: 28px;
  }

  .date-picker .dates {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;

    background-color: #fff;
  }

  .date-picker .dates {
    display: block;
    background-color: #eeeeee;

  
     
  
     box-shadow: rgba(156, 172, 172, 0.2) 0px 2px 2px,
       rgba(156, 172, 172, 0.2) 0px 4px 4px, rgba(156, 172, 172, 0.2) 0px 8px 8px,
       rgba(156, 172, 172, 0.2) 0px 16px 16px,
       rgba(156, 172, 172, 0.2) 0px 32px 32px,
       rgba(156, 172, 172, 0.2) 0px 64px 64px;
  }

  .date-picker .dates .month {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 2px solid #eee;
  }

  .date-picker .dates .month .arrows {
    width: 35px;
    height: 35px;
    display: flex;
    justify-content: center;
    align-items: center;
    color: #313131;
    font-size: 20px;
  }

  .date-picker .dates .month .arrows:hover {
    background-color: #f3f3f3;
  }

  .date-picker .dates .month .arrows:active {
    background-color: #00ca85;
  }

  .date-picker .dates .days {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    height: 200px;
  }
  .date-picker .dates .days .day {
    display: flex;
    justify-content: center;
    align-items: center;
    color: #313131;
  }
  .date-picker .dates .days .day.selected {
    background-color: #00ca85;
  }
</style>
